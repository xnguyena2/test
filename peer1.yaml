
version: '3.3'

networks:
  artifacts:

services:

  18.231.1.233.org1.amazonaws.com:
    container_name: 18.231.1.233.org1.amazonaws.com
    image: hyperledger/fabric-peer:x86_64-1.0.6
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=18.231.1.233.org1.amazonaws.com
      - CORE_LOGGING_PEER=debug
      - CORE_CHAINCODE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      # The following setting skips the gossip handshake since we are
      # are not doing mutual TLS
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/crypto/peer/tls/server.key
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/crypto/peer/tls/server.crt
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/crypto/peer/tls/ca.crt
      - CORE_PEER_ADDRESS=18.231.1.233.org1.amazonaws.com:7051
      # # the following setting starts chaincode containers on the same
      # # bridge network as the peers
      # # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=operator_artifacts
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start
    # command: peer node start --peer-chaincodedev=true
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
        - /var/run/:/host/var/run/
        - ../Channel/crypto-config/peerOrganizations/org1.amazonaws.com/peers/18.231.1.233.org1.amazonaws.com/:/etc/hyperledger/crypto/peer
        - ../Channel/crypto-config/peerOrganizations/org1.amazonaws.com/peers/18.231.1.233.org1.amazonaws.com/msp:/etc/hyperledger/msp/peer
    depends_on:
      - couchdb1
    networks:
      - artifacts

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:x86_64-1.0.6
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - GODEBUG=netdns=go
      - DB_URL=http://localhost:5984/member_db
    ports:
      - 5984:5984
    networks:
      - artifacts